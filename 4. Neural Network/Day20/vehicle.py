# -*- coding: utf-8 -*-
"""Vehicle.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1a_-s32f0PFqC3Abc0ErvF72dOjNy3ecu
"""

import pandas as pd
import numpy as np
import tensorflow as tf

df = pd.read_csv(r"G:/Ddrive/PG DBDA/12 Practical Machine Learning_/Cases/Vehicle Silhouettes/Vehicle.csv")
df

X = df.iloc[:,:-1]
X

from sklearn.preprocessing import MinMaxScaler
scalerx=MinMaxScaler()
X_scaled = scalerx.fit_transform(X)
X_scaled

y = df.iloc[:,-1]
y

y.unique()

from sklearn.preprocessing import LabelEncoder
lencode=LabelEncoder()
y_encoded = lencode.fit_transform(y)

y_encoded

from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test=train_test_split(X_scaled,y_encoded,test_size=0.1,random_state=2022,stratify=df["Class"])

tf.random.set_seed(2022)
model=tf.keras.models.Sequential([
                tf.keras.layers.Dense(7,activation="relu",input_shape=(X_train.shape[1],)),
                tf.keras.layers.Dense(6,activation="relu"),
                tf.keras.layers.Dense(4,activation="relu"),
                tf.keras.layers.Dense(4,activation="softmax")
                                  ])
model.compile(optimizer="adam",loss='sparse_categorical_crossentropy',metrics=["accuracy"])

history=model.fit(X_train,y_train,validation_data=(X_test,y_test),verbose=2,epochs=100)

import matplotlib.pyplot as plt
plt.plot(history.history['loss'])
plt.plot(history.history['val_loss'])
plt.title('model loss')
plt.ylabel('loss')
plt.xlabel('epoch')
plt.legend(['train', 'test'], loc='upper right')
plt.show()

from sklearn.metrics import accuracy_score
y_pred = model.predict(X_test)

y_pred

y_test

y_pred_prob = np.argmax(y_pred,axis =1)

print(f"Accuracy: {accuracy_score(y_test,y_pred_prob)}")

loss, acc = model.evaluate(X_test, y_test,verbose=0)
print('Test loss = {:.4f} '.format(loss))
print('Test acc = {:.4f} '.format(acc))